services:
  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASS}"
      POSTGRES_DB: "${DB_NAME}"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${DB_USER} -d ${DB_NAME}'"]
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    image: "${APP_IMAGE}"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_USER: "${DB_USER}"
      DB_PASS: "${DB_PASS}"
      DB_NAME: "${DB_NAME}"
      DB_HOST: "${DB_HOST}"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "localhost:8000/metrics"]
      interval: 15s
      timeout: 10s
      retries: 3

  proxy:
    image: nginx:alpine
    restart: always
    ports:
      - 80:80
    depends_on:
      backend:
        condition: service_started
    volumes:
      - ./nginx/items.conf:/etc/nginx/conf.d/default.conf
volumes:
  pg_data: